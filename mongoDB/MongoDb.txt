db.companies.insertOne({name:"Fresh Apples Inc", isStartup:true,employees:33,funding:123456789,details:{ceo:"Mark"},foundingDate:new Date()})

db.companies.find().pretty()

db.stats()

--One to Many

db.questionThreads.insertOne({creator: "MAX",question:"How does all work?",answers:["q1a1","q1a2"]})

db.questionThreads.findOne()

 db.answers.insertMany([{_id:"q1a1",text:"Yhis works fine"},{_id:"q1a2",text:"Thanks!"}])

db.questionThreads.deleteMany({})

db.questionThreads.insertOne({creator: "MAX",question:"How does all work?",answers:[{_id:"q1a1",text:"Yhis works fine"},{_id:"q1a2",text:"Thanks!"}]})



db.users.insertMany([{name:"Dhairya",age:22,email:"abc@gmail.com"},{name:"Jeet",age:29,email:"def@gmail.com"}])

db.posts.insertOne({title:"Mongo",text:"First",tags:["db","dbms"],creator:ObjectId("5f0d78a940813a956648e057"),comments:[{text:"Cool",author:ObjectId("5f0d78a940813a956648e056")}]})


db.users.insertMany([{name:"Max",age:12,email:"abc@gmail.com"},{name:"Min",age:13,email:"def@yahoo.com"}])
db.posts.insertOne({title:"The First Post",text:"This is the first of many coming Hope you all Like it!",creater:ObjectId("5f0da7a5760bc50329136d9a"),comments:[{text:"Yay finally fond the right path",author:ObjectId("5f0da7a5760bc50329136d9b")},{text:"Haha noice",author:ObjectId("5f0da7a5760bc50329136d9a")}]})

--validation level
db.createCollection("posts",{validate:{$jsonSchema:{bsonType:"object",required:['title','text','creator','comments'],properties:{title:{bsonType:"string",description:"must be a string and is required"},text:{bsonType:"string",description:"must be a string and is required"},creator:{bsonType:"objectId",description:"must be a objectId and is required"},comments:{bsonType:"array",description:"must be a array and is required",items:{bsonType:"object",required:['text','author'],properties:{text:{bsonType:"string",description:"must be a string  and is required"},author:{bsonType:"objectId",description:"must be a objectid and is required"}}}}}}}})

--validateAction
db.runCommand({
	collMod: 'posts',
	validator: {
		$jsonSchema: {
			bsonType: 'object',
			required: ['title', 'text', 'creator', 'comments'],
			properties: {
				title: {
					bsonType: 'string',
					description: 'must be a string and is required'
				},
				text: {
					bsonType: 'string',
					description: 'must be a string and is required'
				},
				creator: {
					bsonType: 'objectId',
					description: 'must be an objectid and is required'
				},
				comments: {
					bsonType: 'array',
					description: 'must be an array and is required',
					items: {
						bsonType: 'object',
						required: ['text', 'author'],
						properties: {
							text: {
								bsonType: 'string',
								description: 'must be a string and is required'
							},
							author: {
								bsonType: 'objectId',
								description: 'must be an objectid and is required'
							}
						}
					}
				}
			}
		}
	},
	validationAction: 'warn'
});


---insert()

db.persons.insert({name:"Dhairya",age:22})

db.persons.insertMany([{_id:"dhairya",name:"Dhairya",age:22},{_id:"pathik",name:"Pathik",age:22}],{ordered:false})
db.persons.insertMany([{_id:"dhairya",name:"Dhairya",age:22},{_id:"jeet",name:"Jeet",age:22}],{ordered:false})
db.persons.insertMany([{_id:"dhairya",name:"Dhairya",age:22},{_id:"sarang",name:"Jeet",age:22}],{ordered:true})

----WriteConcern
 db.persons.insertOne({name:"Mik",age:22},{writeConcern:{w:0}})
  db.persons.insertOne({name:"Michael",age:22},{writeConcern:{w:1}})
db.persons.insertOne({name:"Alice",age:22},{writeConcern:{w:1,j:true}})
db.persons.insertOne({name:"Alas",age:22},{writeConcern:{w:1,j:true,wtimeout:200}})

----Importing data
mongoimport tv-shows.json -d movieData -c movies --jsonArray --drop


-----find and findOne
db.movies.findOne()
db.movies.findOne({name:"The Last Ship"})
 db.movies.findOne({runtime:{$lte:30}})
 db.movies.findOne({"rating.average":{$gt:7}})
db.movies.find({"genres":"Drama"})
db.movies.find({genres:["Action"]})
db.movies.find({runtime:{$in:[30,42]}}).pretty()

db.movies.find({$or:[{"rating.average":{$lt:5}},{"rating.average":{$gt:9.3}}]}).pretty()
db.movies.find({$nor:[{"rating.average":{$lt:5}},{"rating.average":{$gt:9.3}}]}).pretty()

 db.movies.find({$and:[{genres:"Drama"},{"rating.average":{$gt:9}}]}).pretty()
db.movies.find({genres:"Drama","rating.average":{$gt:9}}).pretty().count()


----Embedded Array
db.user.find({"hobbies.title":"Sports"}).pretty()
 db.user.find({hobbies:{$size:2}}).pretty()

db.moviestarts.find({genre:{$all:["action","thriller"]}}).pretty()

db.user.find({hobbies:{$elemMatch:{title:"Sports",frequency:{$gte:3}}}})

db.user.find().sort({name:-1}).pretty()

db.user.find().sort({name:-1}).skip(1).limit(1).pretty()

db.user.find().sort({name:-1}).limit(1).skip(1).pretty()






------------------------------------------------------------------------------------------------------------------------------



 db.movies.find({},{name:1,genres:1,_id:0}).pretty()
db.movies.find({},{"schedule.time":1}).pretty()

db.movies.find({},{genres:{$slice:2}}).pretty()
db.user.updateMany({"hobbies.title":"Sports"},{$set:{isSporty:true}})
db.user.updateOne({_id:ObjectId("5f0e9b3110f2a26a9ba28cbd")},{$set:{hobbies:[{title:"Sports",frequency:5},{title:"Cooking",frequency:3},{title:"Hiking",frequency:1}]}})

db.user.updateMany({"name":"Chris"},{$set:{age:40,phone:966501212}})
db.user.updateOne({name:"Manuel"},{$inc:{age:1},$set :{isSporty:false}})

db.user.updateMany({isSporty:true},{$unset:{phone:""}})
db.user.find({$and:[{name:"Chris",age:30}]}).pretty()
db.user.updateMany({},{$rename:{age:"totalAge"}})

db.user.updateMany({name:"Maria"},{$set:{age:29,hobbies:[{title:"Good Food",frequency:3}],isSporty:true}},{upsert:true})


db.sports.updateMany({},{$set:{title:"Running",requiresTeam:false}},{upsert:true})
db.sports.updateMany({title:"Soccer"},{$set:{requiresTeam:true}},{upsert:true})
db.sports.updateMany({requiresTeam:true},{$set:{minSize:20}},{upsert:true})
db.sports.updateMany({requiresTeam:true},{$inc:{minSize:1}},{upsert:true})


db.user.updateMany({hobbies:{$elemMatch:{title:"Sports",frequency:{$gte:3}}}},{$set:{"hobbies.$.highFrequency":true}})

db.user.updateMany({"hobbies.frequency":{$gt:2}},{$set:{"hobbies.$.goodFrequency":true}})

db.user.updateMany({"hobbies.frequency":{$gt:2}},{$set:{"hobbies.$[el].goodFrequency":true}},{arrayFilters:[{"el.frequency":{$gt:2}}]})

 db.user.deleteOne({name:"Chris"})
db.user.deleteMany({totalAge:{$exits:false},isSporty:true})

db.contacts.createIndex({"dob.age":1})
db.contacts.dropIndex({"dob.age":1})
db.contacts.explain("executionStats").find({"dob.age":{$gt:60}})

db.sessions.createIndex({createdAt:1},{expireAfterSeconds:10})
db.sessions.insertOne({data:"abcd",createdAt:new Date()})


db.products.insertMany([{title:"A Book",description:"This is an awesome book about a young artist!"},{title:"Red T-shirt",description:"This T-shirt is red and it's pretty awseome!"}])

db.createIndex({description:"text"})
db.products.find({$text:{$search:"awesome"}})
db.products.find({$text:{$search:"\"awesome book\""}})

db.products.dropIndex("description_text")

db.places.insertOne({name:"California Academy of Sciences",location:{type:"Point",coordinates:[-122,37]}})

db.places.find({location:{$near:{$geometry:{$type:"Point",coordinates:[-120,37]}}}})
db.places.createIndex({location:"2dsphere"})
db.places.find({location:{$near:{$geometry:{$type:"Point",coordinates:[-120,37]}}}})
db.places.find({location:{$near:{$geometry:{$type:"Point",coordinates:[-122,37]},$maxDistance:500,$minDistance:0}}})
db.places.insertOne({name:"Conservatory of flowers",location:{type:"Point",coordinates:[-122.46,37]}})